{% extends 'base/base.html.twig'%}
{% block body %}
    <div class="container-fluid">
    <div class="container">
        <form method="post" action="{{ path('rdv_date_valide') }}">
            <legend>Prendre rendez-vous</legend>

                <label>Choisir la date</label>
                <div class="form-group">
                    <input id="date" type="date" name="date" value="{{ date }}">
                </div>
            <label>Choisir l'heure</label>

            {% for heure in heures %}
                <input type="radio" id="heure" name="horaireRadioBouton" value="{{ heure }}" >
                <label name="horaireRadioLabel" >{{ heure }}</label>
            {% endfor %}
            {% if erreurs.heure is defined %}
                <div style="color: red">{{erreurs.heure}}</div>
            {% endif %}

            <br>

            <label>Choisir la préstation</label>
            {% for typeService in typeServices %}
                <input type="radio" name="typeService" value="{{ typeService.id }}"><label for="service">{{ typeService.libelle }}</label>
            {% endfor %}
            {% if erreurs.typeService is defined %}
                <div style="color: red">{{erreurs.typeService}}</div>
            {% endif %}
            <button name="heureValide" type="submit" class="btn btn-primary">{{ button|default('Valider le rendez-vous') }}</button>
        </form>
{% endblock %}
{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script type="text/javascript">
        //On surveille le changement de la date et on appele la fonction actuHeure si changement
        document.getElementById('date').addEventListener("change",actuHeure)
        //première appelle pour initialiser
        //actuHeure()
        window.onload=()=>{
            actuHeure()
        }
        function actuHeure(){
            //Création du tableau des horaires
            //le tableau represente les horaires disponibles
            horaires = ['08:00','08:30','09:00','09:30','10:00','10:30','11:00','11:30','12:00','12:30',
                        '13:00','13:30','14:00','14:30','15:00','15:30','16:00','16:30','17:00','17:30']

            //Recupere la date actuelle
            var date = document.getElementById("date")

            //On récupere le tableau des rdvs dans response.data en appelant dans le controlleur
            //la fonction 'rdv_get'
            const url = '{{ path('rdv_get') }}'
            axios.get(url).then(function (response){

                //on boucle sur le tableau
                for(var i = 0; i < response.data.length; i++) {
                    //si une date des rdvs correspond a la date selectionné
                    if(response.data[i].date.date.substr(0,10) === date.value ){
                        //on supprime l'horaire correspondant
                        horaires.splice(horaires.indexOf(response.data[i].heure),1)
                    }
                }
                //on selectionne tous les boutons radios
                var bouton = document.getElementsByName("horaireRadioBouton")
                //on boucle sur le tableau 'horaires'
                for(var h=0 ; h<horaires.length ; h++){
                    //si la valeur du bouton n'est pas dans le tableau
                    if(horaires.indexOf(bouton[h].getAttribute("value")) === -1){
                        //on désactive le bouton
                        bouton[h].disabled = true;
                    }else{
                        //on active le bouton
                        bouton[h].disabled = false;
                    }
                }
            })
        }
    </script>
{% endblock %}