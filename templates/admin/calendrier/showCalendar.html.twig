{% extends 'base/base.html.twig'%}
{% block body %}
    <div class="container-fluid">
        <div id="calendar"></div>
    </div>
    <div class="container-fluid">
    {% if rdvs is not defined %}
    <p>aucun rendez vous</p>
    {% elseif rdvs is null %}
    <p>aucun rendez vous</p>
    {% elseif rdvs is not empty %}
        <p>liste des rendez vous</p>
        <table class="table">
        <thead class="thead-dark">
        <tr><th>utilisateur</th><th>date</th><th>service</th><th>heure</th><th>valider</th><th>Refuser</th></tr>
        </thead>
        {% for rdv in rdvs %}
            <tr>
                <td>{{ rdv.user.username }}</td><td>{{ rdv.dateRdv|date('d/m/Y')}}</td><td>{{ rdv.typeService.libelle }}</td><td>{{ rdv.heure }}</td>
                <td>
                   <input type="radio" class="ajout" id="ajout" name="{{ rdv.id }}" value="{{ rdv.id }}">
                </td>
                <td>
                    <input type="radio" class="delete" id="delete" name="{{ rdv.id }}" value="{{ rdv.id }}">
                </td>
            </tr>
                {% endfor %}
            </table>
        <button type="submit" id="BoutonValiderRefuser" class="btn btn-primary">valider</button>
    {% endif %}
    </div>
{% endblock %}
{% block javascripts %}

<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.5.1/main.min.js" integrity="sha256-rPPF6R+AH/Gilj2aC00ZAuB2EKmnEjXlEWx5MkAp7bw=" crossorigin="anonymous"></script>

<script>
    /*----------------------------
        script pour calendrier
     ----------------------------*/
    var calendarEl = document.getElementById('calendar');
    var calendar = new FullCalendar.Calendar(calendarEl, {
        //initialise la vue sur une semaine
        initialView: 'timeGridWeek',
        locale: 'fr',
        timeZone:'Europe/Paris',/*
        Permet de définir une tranche horaire
        slotMinTime:'08:00:00',
        slotMaxTime: '18:00:00',*/
        customButtons:{
            myCustomButton:{
                text:'Ajouter un élément au calendrier',
                click:function(){
                    window.location.href = '{{ path('admin_add_calendar') }}';
                }
            }
        },
        //élément présent au dessus du calendrier
        headerToolbar:{
            start:'dayGridMonth,timeGridWeek',
            center:'myCustomButton',
            end:'prev,next'
        },

        /*
        events prend la valeur de data
        data est un return du controleur
        */
        events:{{ data|raw }},
        //listener sur les events
        eventClick:function(e){
            if(confirm('Voulez-vous supprimer l\'événement ?')){
                //récupère l'id de l'event => du calendar
                var donnees = e.event.id

                let url = '{{ path('admin_delete_calendar') }}'
                let xhr = new XMLHttpRequest()
                xhr.open("DELETE",url)
                //envoye de l'id du calendar clicked
                xhr.send(JSON.stringify(donnees))
                //on supprime du calendrier l'event
                e.el.remove()
            }
        }
    });
    //affiche le calendrier
    calendar.render();

    /*----------------------------
        Boutons valider/refuser
    ----------------------------*/
    if(document.getElementById('BoutonValiderRefuser')!=null) {
        document.getElementById('BoutonValiderRefuser').addEventListener("click", creationTab)
    }
    function creationTab() {
        const tabBoutonValide = document.getElementsByClassName("ajout")
        const tabBoutonDelete = document.getElementsByClassName("delete")
        //initialisation des tableaux à envoyer
        var tabIdValide = []
        var tabIdDelete = []

        /*
        on stock dans les tableaux les ids des rdvs valider ou refuser
         */
        for (i = 0; i < tabBoutonValide.length; i++) {
            if (tabBoutonValide[i].checked) {
                tabIdValide.push(tabBoutonValide[i].value)
            }
            if (tabBoutonDelete[i].checked) {
                tabIdDelete.push(tabBoutonDelete[i].value)
            }
        }

        let donnees = [tabIdValide,tabIdDelete]
        let url = '{{ path('admin_rdvValiderRefuser') }}'
        let xhr = new XMLHttpRequest()
        //appelle de la fonction dans le controleur
        xhr.open("POST",url)
        //envoie de donnees
        xhr.send(JSON.stringify(donnees))
        //reload la fenetre
        sleep(1000)
        window.location.reload()
    }

    function sleep(ms){
        const date = Date.now();
        let currentDate = null;
        do{
            currentDate = Date.now()
        }while (currentDate - date < ms);
    }

</script>
{% endblock %}
